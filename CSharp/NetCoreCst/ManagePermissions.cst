<%-- 
Name: csproj.cst
Author: wuw
Description: 项目文件生成（vs2010 sp1,c#4.5）
--%>
<%@ CodeTemplate Language="C#" ResponseEncoding="UTF-8" Inherits="CsNHibernateHelper" Src="Helpers/CsNHibernateHelper.cs" TargetLanguage="C#" Debug="False" Description="Generates a Business Object for NHibernate." %>
<%@ Property Name="ModuleTables" Type="SchemaExplorer.TableSchemaCollection"  Optional="False" Category="1. 数据库设置" Description="请选择模块所包含的表" Filter="SourceTable"%>
<%@ Property Name="AssemblyName" Type="System.String" Default="Systen.CMS.Modules.XX" Optional="False" Category="2a. Assembly" Description="The name of the Assembly that will contain the business objects." %>
<%@ Property Name="FrameworkNamespace" Type="System.String" Default="KDSoft.Framework" Optional="False" Category="3b. 命名空间" Description="Framework命名空间" %>
<%@ Property Name="IServiceNamespace" Type="System.String" Default="Systen.CMS.Modules.XX.IService" Optional="False" Category="3b. 命名空间" Description="IService命名空间" %>
<%@ Property Name="ServiceNamespace" Type="System.String" Default="Systen.CMS.Modules.XX.Service" Optional="False" Category="3b. 命名空间" Description="Service命名空间" %>
<%@ Property Name="EntitiesNamespace" Type="System.String" Default="Systen.CMS.Modules.XX.Entities" Optional="False" Category="3b. 命名空间" Description="实体命名空间" %>

<%@ Property Name="ModuleName" Type="System.String" Default="信息发布模块" Optional="False" Category="4. 模块配置" Description="模块中文名称" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="NHibernateHelper" Path="..\..\Common\NHibernateHelper" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="NHibernateHelper" %>
<%@ Map Name="SystemCSharp" Src="System-CSharpAlias" %>

using Systen.Framework.Module.Menu;

namespace <%=this.AssemblyName %>
{
    public struct <%=GetLastAssemblyName()%>ManagePermissions
    {

        /// <summary>
        /// <%= ModuleName%>左侧菜单
        /// </summary>
        [Application(Name = "<%= ModuleName%>", Key = "<%=this.AssemblyName %>", URL = "",Icon ="")]
        public struct <%=GetLastAssemblyName()%>ManageMenu
        {      
            <%
            foreach(TableSchema table in ModuleTables)
            {
                string tableName=GetTableClassName(table);
                if(!table.Description.Contains("[noList]")){
            %>           
            //<%=table.Description %>  
            [ManageMenu(Name = "<%=table.Description %>", Key = "#<%=tableName%>/<%=tableName%>List", URL = "#<%=tableName%>/<%=tableName%>List", Icon = "line-font line-profilemale")]
            public struct <%=tableName%>List
            {
            <%if(!table.Description.Contains("[noAdd]")){ %>
                
                //编辑界面
                [Operation(Name = "编辑界面", Key = "#<%=tableName%>/<%=tableName%>Edit")]
                public struct <%=tableName%>Edit { }

                //获取列表               
                [Operation(Name = "获取列表", Key = "<%=tableName%>/GetList")]
                public struct GetList { }
                //添加               
                [Operation(Name = "获取添加结构", Key = "<%=tableName%>/GetDefaultInstance")]
                public struct GetDefaultInstance { }
                //添加保存
                [Operation(Name = "添加保存", Key = "<%=tableName%>/Insert")]
                public struct Insert { }
                //修改
                [Operation(Name = "获取修改结构", Key = "<%=tableName%>/Get")]
                public struct Get { }
                //修改保存
                [Operation(Name = "修改保存", Key = "<%=tableName%>/Update")]
                public struct Update { }

                //批量删除
                [Operation(Name = "批量删除", Key = "<%=tableName%>/BatchDelete")]
                public struct BatchDelete { }
			   <%} %>
            }
            <%}}%> 

        }
    }
}
<script runat="template"> 
/// <summary>
///  
/// </summary>
/// <param name="folder"></param>
/// <returns></returns>
private string GetLastAssemblyName()
{
    var AssemblyNames= this.AssemblyName.Split('.');
	 
	return AssemblyNames[AssemblyNames.Length-1];
}
</script>