<%-- 
Name: edit.cshtml.cst
Author: lspcieee
Description: 编辑页面生成
--%>
<%@ CodeTemplate Language="C#" Src="..\Helpers\CsNHibernateHelper.cs" Inherits="CsNHibernateHelper"　 ResponseEncoding="UTF-8" TargetLanguage="html" Debug="False" Description="Generates an editable Business Object for NHibernate." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Optional="False" Category="1a. Source Table" Description="The source table to generate from." %>
<%@ Property Name="FrameworkNamespace" Type="System.String" Default="KDSoft.KDCMS.Framework" Optional="False" Category="3b. 命名空间" Description="Framework命名空间" %>
<%@ Property Name="IServiceNamespace" Type="System.String" Default="KDSoft.KDCMS.Modules.XX.IService" Optional="False" Category="3b. 命名空间" Description="IService命名空间" %>
<%@ Property Name="ServiceNamespace" Type="System.String" Default="KDSoft.KDCMS.Modules.XX.Service" Optional="False" Category="3b. 命名空间" Description="Service命名空间" %>
<%@ Property Name="EntitiesNamespace" Type="System.String" Default="KDSoft.KDCMS.Modules.XX.Entities" Optional="False" Category="3b. 命名空间" Description="实体命名空间" %>
<%@ Property Name="AssemblyName" Type="System.String" Default="KDSoft.KDCMS.Modules.XX" Optional="False" Category="3b. 程序集" Description="模块程序集名称" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="NHibernateHelper" Path="..\..\..\Common\NHibernateHelper" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="NHibernateHelper" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>

<%@ Map Name="SystemCSharp" Src="System-CSharpAlias" %>
<%
TableSchemaCollection ExcludedTables = new TableSchemaCollection();
EntityManager entityManager = new EntityManager(SourceTable, ExcludedTables);
List<EntityMember> entityManagerList=entityManager.MembersNoKeyNoVersion.Where(m => !m.Column.Description.Contains("[hide]")).ToList();
    //获取主键名称
    string primaryKeyName="Id";
	//Primary Key
	if(entityManager.PrimaryKey.IsCompositeKey) { 

	} else {
        primaryKeyName= entityManager.PrimaryKey.KeyColumn.PropertyName;
	} 
   
%>
@inherits Systen.Framework.MVC.MvcWebViewPage
@section Head{
    @RegisterHeaderFile("common", "semantic", "Ztree", "knockout", "poshytip", "validate", "edit")
}
<h2 id="editHeader" class="ui header">
    <div id="editHeaderButton">
        <a href="#" class="close" title="关闭"><i class="icon line-close line-font"></i></a>
    </div>
    <i class="edit icon"></i>
    <div class="content">
        @ViewBag.Title
        <div class="sub header">@ViewBag.Title</div>
    </div>

</h2>

<form id="EditForm" action="">
    <div class="ui container ui form">
    
     <% for (int i = 0; i < entityManagerList.Count; i+=2){ %>
         <div class="two fields">
           <div class="<%if(!entityManagerList[i].Column.AllowDBNull && entityManagerList[i].Column.SystemType != typeof(System.Boolean)){%>required <% } %> field">
                <label><%= GetDescription(entityManagerList[i]) %>:</label>
                <div class="ui left icon small input">
                    <input id="<%= entityManagerList[i].PropertyName %>" name="<%= entityManagerList[i].PropertyName %>" data-bind="value:<%= GetTableClassName(SourceTable) %>().<%= entityManagerList[i].PropertyName %>" type="text"  <%if(!entityManagerList[i].Column.AllowDBNull && entityManagerList[i].Column.SystemType != typeof(System.Boolean)){%>class="validate-input" <% } %> >
                    <i class="pencil icon"></i>
                </div>
            </div>
            <%if((i+1)<entityManagerList.Count){ %>
            <div class="<%if(!entityManagerList[i].Column.AllowDBNull && entityManagerList[i].Column.SystemType != typeof(System.Boolean)){%>required <% } %>field">
                <label><%=GetDescription(entityManagerList[i+1]) %>:</label>
                <div class="ui left icon small input">
                    <input id="<%= entityManagerList[i+1].PropertyName %>" name="<%= entityManagerList[i+1].PropertyName %>" data-bind="value:<%= GetTableClassName(SourceTable) %>().<%= entityManagerList[i+1].PropertyName %>" type="text" <%if(!entityManagerList[i].Column.AllowDBNull && entityManagerList[i].Column.SystemType != typeof(System.Boolean)){%>class="validate-input" <% } %>>
                    <i class="pencil icon"></i>
                </div>
            </div>
            <%} %>
        </div>
      <% } %>
    </div>
    <div>
        <div class="bottom-btn-box">
            <button class="ui twitter  button" data-bind="click:onSaveClick"><i class="checkmark icon"></i>保存</button>
            <button class="ui button" data-bind="click:onCloseDialog"><i class="remove icon"></i>取消</button>
        </div>
    </div>

</form>

@section Script{
<script type="text/javascript">
        var editViewModel = function () {
            var self = this;
            self.<%= GetTableClassName(SourceTable) %> = ko.observable();
            
            //初始化jquery插件等 
            self.initControl = function() {
            //初始化控件
            
            };
              //初始化验证
            self.initValidate = function (){
              //数据验证设置
              $loadValidate();
              
              <% foreach(EntityMember em in entityManagerList){ 
                  if(!em.Column.AllowDBNull && em.Column.SystemType != typeof(System.Boolean)){%>
                    $("#<%=em.PropertyName %>").rules("add",
                    {
                        required: true,
                        messages: {
                            required: "请填写<%=GetDescription(em)%>"
                        }
                    });
                <% } 
              } %>
              
              
            };
            //提交数据
            self.submitData = function () {
                //获取
                var editItem = self.<%= GetTableClassName(SourceTable) %>();

                $.post('@Url.RouteUrl("Modules", new { Action = "<%= GetTableClassName(SourceTable) %>SaveEdit" })', { 'editItem': editItem }, function (result) {
                    if (result.Success) {
                        layer.msg(result.Msg, {
                            icon: 1,
                            shift: 5
                        });
                        setTimeout('closeCurrentDialog()', 500);
                    } else {
                        layer.msg(result.Msg, {
                            icon: 2,
                            shift: 5
                        });
                    }
                }, 'json');
            };
             //保存按钮事件
            self.onSaveClick = function () {
                if ($("#EditForm").valid()) {
                    self.submitData();
                }
            };
            //关闭按钮事件
            self.onCloseDialog = function () {
                var index = parent.layer.getFrameIndex(window.name); //获取当前窗体索引
                parent.layer.close(index); //执行关闭
            };
            
            self.loadData = function () {
                self.<%= GetTableClassName(SourceTable) %>(ViewBag.<%= GetTableClassName(SourceTable) %>); 
                self.initControl();
                self.initValidate();
            };
            
        };

        
        $(function () {
            var viewModel = new editViewModel();
            viewModel.loadData();
            ko.applyBindings(viewModel);

        });
   </script>     
}