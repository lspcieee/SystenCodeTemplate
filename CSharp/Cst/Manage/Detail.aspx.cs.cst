<%-- 
Name: Detail.aspx.cs.cst
Author: will
Description: 详情页面生成
--%>
<%@ CodeTemplate Language="C#" Src="..\Helpers\CsNHibernateHelper.cs" Inherits="CsNHibernateHelper"　 ResponseEncoding="UTF-8" TargetLanguage="C#" Debug="False" Description="Generates an editable Business Object for NHibernate." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Optional="False" Category="1a. Source Table" Description="The source table to generate from." %>
<%@ Property Name="FrameworkNamespace" Type="System.String" Default="Systen.CMS.Framework" Optional="False" Category="3b. 命名空间" Description="Framework命名空间" %>
<%@ Property Name="IServiceNamespace" Type="System.String" Default="Systen.CMS.Modules.XX.IService" Optional="False" Category="3b. 命名空间" Description="IService命名空间" %>
<%@ Property Name="ServiceNamespace" Type="System.String" Default="Systen.CMS.Modules.XX.Service" Optional="False" Category="3b. 命名空间" Description="Service命名空间" %>
<%@ Property Name="EntitiesNamespace" Type="System.String" Default="Systen.CMS.Modules.XX.Entities" Optional="False" Category="3b. 命名空间" Description="实体命名空间" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="NHibernateHelper" Path="..\..\..\Common\NHibernateHelper" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="NHibernateHelper" %>
<%@ Map Name="SystemCSharp" Src="System-CSharpAlias" %>
<%
TableSchemaCollection ExcludedTables = new TableSchemaCollection();
EntityManager entityManager = new EntityManager(SourceTable, ExcludedTables);
    //获取主键名称
    string primaryKeyName="Id";
    //Primary Key
	if(entityManager.PrimaryKey.IsCompositeKey) { 

	} else {
        primaryKeyName= entityManager.PrimaryKey.KeyColumn.PropertyName;
	} 
%>
using System;
using System.Threading;
using System.Web.UI.WebControls;
using <%= this.EntitiesNamespace %>;
using <%= this.IServiceNamespace %>;
using Systen.CMS.Util.Ext;

public partial class <%= GetTableClassName(SourceTable) %>Detail : ManagePageBase
{
    #region 服务
        
    /// <summary>
    /// <%= SourceTable.Description %>操作对象
    /// </summary>
    public I<%= GetTableClassName(SourceTable) %>Service <%= GetTableClassName(SourceTable) %>Service { get; set; }

    #endregion
    
    /// <summary>
    /// <%= SourceTable.Description %>Id
    /// </summary>
    public int <%= GetTableClassName(SourceTable) %>Id
    {
        get
        {
            return ViewState["<%= GetTableClassName(SourceTable) %>Id"] != null ? (int) ViewState["<%= GetTableClassName(SourceTable) %>Id"] : int.MinValue;
        }
        set { ViewState["<%= GetTableClassName(SourceTable) %>Id"] = value; }
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            // 初始化表单数据
            InitData();

            // 判断是修改是还是新增
            if (!Request.QueryString["<%= GetTableClassName(SourceTable) %>Id"].IsNullOrEmpty())
            {
                <%= GetTableClassName(SourceTable) %>Id = Request.QueryString["<%= GetTableClassName(SourceTable) %>Id"].ToInt32();
                LoadData();
            }
        }
    }

    #region 初始化

    /// <summary>
    /// 初始化表单数据
    /// </summary>
    private void InitData()
    {
        //加载header引用文件
        RegisterHeaderFile("colorbox", "poshytip", "detail");
        //RegisterHeaderFileByModule("Core.WebsiteMenuDetail", GetService<CoreModule>());
        
        //todo:加载下拉框数据
    }

    #endregion

    #region 加载数据

    /// <summary>
    /// 编辑时加载数据
    /// </summary>
    private void LoadData()
    {
        if (<%= GetTableClassName(SourceTable) %>Id <= 0)
        {
            return;
        }

        <%= GetTableClassName(SourceTable) %> data = <%= GetTableClassName(SourceTable) %>Service.Get(<%= GetTableClassName(SourceTable) %>Id);

        // 自动绑定属性到控件
        phData.BindObjectToControls(data, "fc");

        // 手动绑定属性到控件

    }

    #endregion
}